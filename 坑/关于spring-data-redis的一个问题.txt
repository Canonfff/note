2020-06-08 17:48
问题复现:
	泰久项目云票务的定时任务测试的时候出现了一个问题;
	在多线程环境下,在开启事务的时候,redis获取连接一直为空,错误显示: pool not open
	在单线程下并无此问题
	在多线程,不开启事务的时候也没有这个问题;

	我的东西也就无法完成;


问题定位过程:
	1.首先,排除是我线程池的原因;我使用了两种线程池,spring自带的线程池与自己写的一个线程池;都会出现这样的情况
	2.我以为是事务的原因,所以去问了编写多数据源事务控制的同事,但他说没有操作过redis,也没有重置过redis;
	3.问题陷入一个瓶颈,我开始回溯问题出现的原因,这里显示pool not open;那么有可能是redis返回了连接池,或者重置了连接池
	4.向着这个方向去找,找到了一篇博文说,redis会在execute方法里面调用最终逻辑;我顺着源码去找;结果发现这里有个成员变量enableTransactionSupport
		因为问题的出现就是在事务的条件下导致redis连接池无法获取,那么这个变量有可能是关键点;所以我去找了官方文档;

		官方文档说明这个字段的作用是在多线程环境下的事务支持;简单来说就是:
			setEnableTransactionSupport（true）为正在使用的每个RedisTemplate显式启用。这样做会强制将当前重新连接绑定到正在触发MULTI的当前线程。如果事务在没有错误的情况下完成，则调用EXEC。否则将调用DISCARD。一次在多个，RedisConnection队列写操作。所有只读操作（如键）都通过管道传输到新的（非线程绑定的）重新连接。


一点体验:
	这个问题的难度挺高的,因为这个目前来说,我对redis的接触并不多,导致了自己在设置的项其实存在很多不熟悉;所以只能一步步去看;这里面存在的不足是自己对于官方文档的不熟悉以及对源码的不熟悉;